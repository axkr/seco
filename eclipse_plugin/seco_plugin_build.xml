<?xml version="1.0" encoding="UTF-8"?>
<project default="headless_plugin_export" name="build">
	<!-- The plugins directory of the Eclipse distribution-->
	<property name="eclipse_plugins_dir" value="F:/eclipse3.6.1/eclipse/plugins" />

	<!-- The directory containing seco lib files -->
	<property name="seco_top_dir" value="../core" />

	<!-- The directory containing seco lib files -->
	<property name="lib" value="${seco_top_dir}/lib" />

	<!-- The path to generated seco.jar as defined in core/build.xml -->
	<property name="seco_jar" value="${seco_top_dir}/build/seco/seco.jar" />

	<!-- The directory where the plugin classes will be build -->
	<property name="build" value="${basedir}/bin" />
	<!-- The directory where the update site will be created-->
	<property name="dist" value="${basedir}/dist" />

	<!-- these create the resulting plugin file names. Edit as needed -->
	<property name="majorversion" value="1.0.0" />
	<property name="fullpluginname" value="seco.eclipse.plugin_${majorversion}.jar" />
	<property name="feature_name" value="seco.eclipse.plugin.feature" />
	<property name="fragments" value="${basedir}/distribution/fragments/" />
	<property name="lin64" value="seco.eclipse.plugin.linux.x64" />
	<property name="lin32" value="seco.eclipse.plugin.linux.x86" />
	<property name="win64" value="seco.eclipse.plugin.win32.x64" />
	<property name="win32" value="seco.eclipse.plugin.win32.x86" />
	<property name="macos" value="seco.eclipse.plugin.macos.x86" />

	<!-- classpath for compiling-->
	<path id="classpath">
		<fileset dir="lib">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${eclipse_plugins_dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="clean" description="Clean up">
		<delete file="${seco_jar}" />
		<delete dir="${build}" />
		<delete dir="${dist}" />
	</target>

	<target name="compile" depends="prepare" description="compile the Seco plug-in source">
		<javac source="1.5" classpathref="classpath" destdir="${build}" srcdir="${basedir}/src" />
	</target>

	<target name="prepare" depends="clean" description="Copy Seco lib files to build directory.">
		<mkdir dir="${build}" />
		<mkdir dir="${dist}" />
		<!-- Build seco.jar -->
		<ant antfile="${seco_top_dir}/build.xml" dir="${seco_top_dir}" target="jars" inheritAll="false" />
		<!-- Copy seco lib files to build tree -->
		<copy todir="${basedir}/lib">
			<fileset dir="${lib}">
				<include name="**/*.jar" />
				<include name="native/**" />
			</fileset>
		</copy>
		<copy file="${seco_jar}" tofile="${basedir}/lib/seco.jar" />
	</target>

	<target name="headless_plugin_export" depends="compile">
		<!-- copy the icons -->
		<copy todir="${build}/icons">
			<fileset dir="${basedir}/icons">
				<exclude name="**/SVN" />
			</fileset>
		</copy>

		<!-- copy the meta-inf -->
		<copy todir="${build}/META-INF">
			<fileset dir="${basedir}/META-INF">
				<exclude name="**/SVN" />
			</fileset>
		</copy>
		<!-- copy the lib -->
		<copy todir="${build}/lib">
			<fileset dir="${basedir}/lib">
				<include name="**/*.jar" />
			</fileset>
		</copy>
		<copy file="${basedir}/plugin.xml" todir="${build}" />
		<copy file="${basedir}/contexts.xml" todir="${build}" />
		<mkdir dir="${dist}/plugins" />
		<jar destfile="${dist}/plugins/${fullpluginname}" basedir="${build}" manifest="${build}/META-INF/MANIFEST.mf" />
		<!-- build OS fragment -->
		<jar destfile="${dist}/plugins/${lin64}_${majorversion}.jar" basedir="${fragments}/${lin64}" manifest="${fragments}/${lin64}/META-INF/MANIFEST.mf" />
		<jar destfile="${dist}/plugins/${lin32}_${majorversion}.jar" basedir="${fragments}/${lin32}" manifest="${fragments}/${lin32}/META-INF/MANIFEST.mf" />
		<jar destfile="${dist}/plugins/${win64}_${majorversion}.jar" basedir="${fragments}/${win64}" manifest="${fragments}/${win64}/META-INF/MANIFEST.mf" />
		<jar destfile="${dist}/plugins/${win32}_${majorversion}.jar" basedir="${fragments}/${win32}" manifest="${fragments}/${win32}/META-INF/MANIFEST.mf" />
		<jar destfile="${dist}/plugins/${macos}_${majorversion}.jar" basedir="${fragments}/${macos}" manifest="${fragments}/${macos}/META-INF/MANIFEST.mf" />
		<!-- build the feature -->
		<mkdir dir="${dist}/features" />
		<jar destfile="${dist}/features/${feature_name}_${majorversion}.jar" basedir="${basedir}/distribution/${feature_name}" />
		<!-- Copy the site.xml file -->
		<copy file="${basedir}/distribution/seco.eclipse.plugin.update_site/site.xml" todir="${dist}" />
	</target>

	<target name="dist-zip" depends="headless_plugin_export">
		<zip zipfile="${basedir}/seco.eclipse.plugin_${majorversion}.zip">
			<fileset dir="${dist}">
				<include name="**/**" />
			</fileset>
		</zip>
	</target>

	<target name="dist-tar.gz" depends="headless_plugin_export" description="Build Linux distribution">
		<tar destfile="${basedir}/seco.eclipse.plugin_${majorversion}.tar.gz" compression="gzip">
			<fileset dir="${dist}">
				<include name="**/**" />
			</fileset>
		</tar>
	</target>

	<!--
	<target name="plugin_export" depends="compile">
		<pde.exportPlugins destination="${dist}" exportSource="false" exportType="directory" plugins="seco.eclipse.plugin" useJARFormat="true" />
	</target>
	
	 <taskdef classname="org.eclipse.equinox.internal.p2.publisher.ant.FeaturesAndBundlesPublisherTask"
        name="p2.publish.featuresAndBundles"/> 
	<target name="site_pre_build">
		<p2.publish.featuresAndBundles
			repositoryName="Seco Test Site"
		    metadataRepository="${dist}"
		    artifactRepository="${dist}"
		    publishArtifacts="true"
		    compress="true"
		    source="${basedir}"/>
	</target>
	-->
</project>
