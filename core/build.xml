<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="Seco">
	<description>Seco Build File</description>

	<property name="version" value="0.7.0" />
	<property name="jar-name" value="seco.jar"/>
	
	<!-- The directory containing library jar files -->
	<property name="lib" value="${basedir}/lib" />

	<!-- The directory containing source code -->
	<property name="src" value="${basedir}/src" />

	<!-- The directory containing distribution jar -->
	<property name="dist" value="${basedir}/dist" />

	<!-- Any file generated by a build target should go in the build dir. -->
	<property name="build" value="${basedir}/build" />

	<!-- classpath for compiling-->
	<path id="classpath">
		<fileset dir="lib">
			<include name="**/*.jar" />
		</fileset>

		<pathelement path="${java.class.path}" />
	</path>


	<target name="timestamp">
		<!-- Create the time stamp -->
		<tstamp />
	</target>

	<target name="init" depends="timestamp">
		<mkdir dir="${build}" />
        <mkdir dir="${build}/compile" />
        <mkdir dir="${build}/seco" />
		<mkdir dir="${dist}" />
	</target>

	<target name="compile" depends="init" description="compile the Seco source">
		<javac source="1.7" classpathref="classpath" debug="on" destdir="${build}/compile" srcdir="${src}">
		</javac>
	</target>

	<target name="jars-prepare" depends="init" description="Copy resource files to build directory.">
		<!-- Copy all resources from source tree to build tree -->
		<copy todir="${build}/compile">
			<fileset dir="${src}">
				<exclude name="META-INF/**" />
				<include name="**/*.class" />
				<include name="**/*.png" />
				<include name="**/*.gif" />
                <include name="**/*.jpg" />
				<include name="**/*.properties" />
				<include name="**/*.xml" />
				<include name="**/*.dtd" />
				<include name="**/*.txt" />
                <include name="**/*.scm"/>
                <include name="**/*.json"/>
			</fileset>
	    </copy>
	</target>

	<target name="jars" depends="compile, jars-prepare" description="Build Seco Jar file.">
		<jar basedir="${build}/compile" jarfile="${build}/seco/${jar-name}">
			<exclude name="**/*.jar" />
			<exclude name="**/*.bak" />
		</jar>
       <copy todir="." file="${build}/seco/seco.jar"/>
	</target>

	<target name="dist-prepare" depends="jars" description="Copy distribution files for zip.">
		<copy todir="${build}/seco">
			<fileset dir=".">
				<include name="lib/**" />
				<include name="Readme.txt" />
				<include name="LicensingInformation" />
                <include name="BERKELEYDB_LICENSE.txt" />
			</fileset>
		</copy>
		<exec executable="cp">
		    <arg line=" run.sh run.cmd ${build}/seco"/>
		</exec>		
    <copy todir="${build}/seco">
        <fileset dir=".">
            <include name="examples/**"/>
        </fileset>
    </copy>        
	</target>

	<target name="dist-zip" depends="dist-prepare" description="Build Windows distribution">
		<zip zipfile="${dist}/seco-dist-${version}.zip">
			<fileset dir="${build}">
				<include name="seco/**" />
			</fileset>
		</zip>
	</target>

	<target name="dist-tgz" depends="dist-prepare" description="Build Linux distribution">
		<tar destfile="${dist}/seco-dist-${version}.tar">
		  <tarfileset dir="${build}" filemode="755" username="ant" group="ant">
		    <include name="seco/run.sh"/>
		  </tarfileset>			
			<tarfileset dir="${build}">
				<include name="seco/**" />
				<exclude name="seco/run.sh"/>
			</tarfileset>
     </tar>
     <gzip src="${dist}/seco-dist-${version}.tar"
           destfile="${dist}/seco-dist-${version}.tgz"/>
     <delete file="${dist}/seco-dist-${version}.tar"/>
	</target>

	<target description="clean up" name="clean">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}" />
		<delete dir="${dist}" />
	</target>
</project>
